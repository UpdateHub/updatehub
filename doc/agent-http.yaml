openapi: 3.0.0
info:
  title: UpdateHub Agent local HTTP API routes
  description: |-
    These are the routes available through HTTP on the device running the
    UpdateHub Agent.
  version: "2.0"
servers:
  - url: "http://localhost:8080"
    variables: {}

paths:
  "/info":
    get:
      summary: "Get general information."
      responses:
        "200":
          description: "Request accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentInfo"

  "/probe":
    post:
      summary: "Actively probe the server."
      description: |-
        Probe the server and download the update metadata if available.  This
        request accepts a "server_address" parameter on POST. When it's present,
        it will use the address for the triggered probe process and following
        requests in case there is an update available.

        The returned JSON object is an enum with three possible possibilities:
        "updating", "no_update" and "try_again".  The "try_again": is a object
        that contains an integer which inform the caller it should retry the
        request again in 'n' seconds from now.

        If agent is busy (e.g. downloading a object or installing an object) the
        returned http code is 406.
      requestBody:
        required: false
        description: "The custom server to probe"
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/ProbeCustomServer"
      responses:
        "200":
          description: "Request accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProbeInfo"
              examples:
                ex1:
                  value:
                    try_again: 3600
                ex2:
                  value:
                    '"updating"'
        "406":
          description: "Agent is busy"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentState"

  "/local_install":
    post:
      summary: "Install local package"
      description: |-
        Request the agent for installation of a local package.
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/LocalInstallRequest"
      responses:
        "200":
          description: "Request accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentState"
        "406":
          description: "Local instalation cond't start"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentState"

  "/remote_install":
    post:
      summary: "Download and install package from remote url"
      description: |-
        Request the agent for installation of a remote package.
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/RemoteInstallRequest"
      responses:
        "200":
          description: "Request accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentState"
        "406":
          description: "Remote instalation cond't start"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentState"

  "/update/download/abort":
    post:
      summary: "Abort download"
      description: |-
        Abort an update download (triggered by any command). It returns the
        current state of the agent when handling the abort together with the
        respective HTTP code. On success the returned HTTP code is 200, and on
        failure it is 406.
      responses:
        "200":
          description: "Download Aborted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentState"
        "406":
          description: "No download to be aborted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentState"

  "/log":
    get:
      summary: "Fetch agent log"
      description: |-
        Returns the agent log.
      responses:
        "200":
          description: "Log of last execution"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogEntry"

components:
  schemas:
    AgentInfo:
      description: "Information about the agent"
      required:
        - state
        - version
        - config
        - firmware
        - runtime_settings
      properties:
        state:
          $ref: "#/components/schemas/AgentState"
        version:
          type: string
          example: "0.1.0-87-ga836b13"
        config:
          $ref: "#/components/schemas/AgentInfoSettings"
        firmware:
          $ref: "#/components/schemas/AgentInfoFirmware"
        runtime_settings:
          $ref: "#/components/schemas/AgentInfoRuntimeSettings"

    ProbeInfo:
      description: "Response about requested probe"
      oneOf:
        - type: string
          enum: ["updating", "no_update"]
        - type: object
          required:
            - try_again
          properties:
            try_again:
              type: integer
              example: 3600

    ProbeCustomServer:
      description: "Server address which the update procedure will use for this request"
      type: object
      required:
        - custom_server
      properties:
        custom_server:
          type: string
          example: "http://different-address:8080"

    LocalInstallRequest:
      description: "The update file which will be used for this request"
      type: object
      required:
        - file
      properties:
        file:
          type: string
          example: "/tmp/updatehub-image-qa-uh-qemu-x86-64.uhupkg"

    RemoteInstallRequest:
      description: "URL to directly download the update file which will be used for this request"
      type: object
      required:
        - url
      properties:
        url:
          type: string
          example: "https://some_remote_url.domain/update.uhupkg"

    AgentInfoSettings:
      type: object
      required:
        - polling
        - storage
        - update
        - network
        - firmware
      properties:
        polling:
          $ref: "#/components/schemas/AgentInfoSettingsPolling"
        storage:
          $ref: "#/components/schemas/AgentInfoSettingsStorage"
        update:
          $ref: "#/components/schemas/AgentInfoSettingsUpdate"
        network:
          $ref: "#/components/schemas/AgentInfoSettingsNetwork"
        firmware:
          $ref: "#/components/schemas/AgentInfoSettingsFirmware"

    AgentInfoSettingsFirmware:
      type: object
      required:
        - metadata
      properties:
        metadata:
          type: string
          example: "/usr/share/updatehub"

    AgentInfoSettingsNetwork:
      type: object
      required:
        - server_address
        - listen_socket
      properties:
        server_address:
          type: string
          example: "api.updatehub.io"
        listen_socket:
          type: string
          example: "localhost:8080"

    AgentInfoSettingsUpdate:
      type: object
      required:
        - download_dir
        - supported_install_modes
      properties:
        download_dir:
          type: string
          example: "/tmp/download"
        supported_install_modes:
          type: array
          items:
            $ref: "#/components/schemas/SupportedInstallMode"

    AgentInfoSettingsStorage:
      type: object
      required:
        - read_only
        - runtime_settings
      properties:
        read_only:
          type: boolean
        runtime_settings:
          type: string
          example: "/data/updatehub/state.data"

    AgentInfoSettingsPolling:
      type: object
      required:
        - enabled
        - interval
      properties:
        enabled:
          type: boolean
        interval:
          $ref: "#/components/schemas/Duration"

    AgentInfoFirmware:
      type: object
      required:
        - product_uid
        - device_identity
        - device_attributes
        - hardware
        - version
      properties:
        product_uid:
          type: string
          example: "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
        device_identity:
          type: object
          additionalProperties:
            type: string
          example:
            "id1": "value1"
            "id2": "value2"
        device_attributes:
          type: object
          additionalProperties:
            type: string
          example:
            "attr1": "value1"
            "attr2": "value2"
        hardware:
          type: string
          example: "board-name-revA"
        version:
          type: string
          example: "1.2"
        pub_key:
          type: string
          example: "/usr/share/updatehub/key.pub"

    AgentInfoRuntimeSettings:
      type: object
      required:
        - polling
        - update
        - path
        - persistent
      properties:
        polling:
          $ref: "#/components/schemas/AgentInfoRuntimeSettingsPolling"
        update:
          $ref: "#/components/schemas/AgentInfoRuntimeSettingsUpdate"
        path:
          type: string
          example: "/data/updatehub/state.data"
        persistent:
          type: boolean
          example: true

    AgentInfoRuntimeSettingsPolling:
      type: object
      required:
        - last
        - retries
        - now
        - server_address
      properties:
        last:
          type: string
          example: "2017-01-01T00:00:00Z"
        retries:
          type: integer
        now:
          type: boolean
        server_address:
          $ref: "#/components/schemas/RuntimePollingServer"

    AgentInfoRuntimeSettingsUpdate:
      type: object
      properties:
        upgrade_to_installation:
          $ref: "#/components/schemas/InstallationSet"
        applied_package_uid:
          type: string
          example: "587f984393f04c63d8e0948ffcf3860500b1981b8496e5eb2a0d0f9a7ea356a5"

    LogEntry:
      type: object
      required:
        - level
        - message
        - time
        - data
      properties:
        level:
          $ref: "#/components/schemas/LogLevel"
        message:
          type: string
          example: "info 1"
        time:
          type: string
          example: "2017-06-29 14:59:41.831111065 -0300 -03"
        data:
          type: object
          additionalProperties:
            type: string
          example:
            field1: "value1"
            field2: "value2"

    LogLevel:
      type: string
      enum: ["error", "info", "warning", "debug", "trace"]

    SupportedInstallMode:
      description: "Available install modes"
      type: string
      enum: ["copy", "raw"]

    AgentState:
      description: "Agent state"
      type: string
      enum: ['"park"', '"entry_point"', '"poll"', '"probe"', '"validation"', 
            '"download"', '"install"', '"reboot"', '"direct_download"',
            '"prepare_local_install"', '"error"']

    InstallationSet:
      description: "The partitions used for boot or installation"
      type: string
      enum: ["a", "b"]

    RuntimePollingServer:
      description: |-
        The server being used for the current running probe operation, if
        default then the probe is being made to the server specified by the
        agent settings. This can be non default when the user requests probe to
        a different server.
      oneOf:
        - type: string
          enum: ["default"]
        - type: object
          required:
            - custom
          properties:
            custom:
              type: string
      example:
        custom: "http://localhost:8080"

    Duration:
      type: string
      description: |-
        A integer followed by a letter to indicate the time unit
      example: "3600s"
