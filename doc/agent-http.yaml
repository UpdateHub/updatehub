openapi: 3.0.0
info:
  title: UpdateHub Agent local HTTP API routes
  description: |-
    These are the routes available through HTTP on the device running the
    UpdateHub Agent.
  version: "2.0"
servers:
  - url: "http://localhost:8080"
    variables: {}

paths:
  "/info":
    get:
      summary: "Get general information."
      responses:
        "200":
          description: "Request accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentInfo"

  "/probe":
    post:
      summary: "Actively probe the server."
      description: |-
        Probe the server and download the update metadata if  available.
        Returns a json object containing the "update_available" boolean field.
        It also may contain a "try_again_in" field which means the caller should
        try the request again 'n' seconds from now, where 'n' is the value of
        "try_again_in".

        This request accepts a "server_address" parameter on POST. When it's present,
        it will use the address for the triggered probe (and the update procedure too
        in case there is an update available).

        If agent is busy (e.g. downloading a object or installing an object) the
        returned http code is 202.
      requestBody:
        required: false
        description: "The custom server to probe"
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/ProbeCustomServer"
      responses:
        "200":
          description: "Request accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProbeInfo"
        "202":
          description: "Agent is busy"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentStatus"

  "/local_install":
    post:
      summary: "Install local package"
      description: |-
        Request the agent for installation of a local package.
      requestBody:
        required: true
        description: "Path for the file to be installed"
        content:
          text/plain:
            schema:
              type: string
              example: "/tmp/update.uhupkg"
      responses:
        "200":
          description: "Request accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentStatus"
        "422":
          description: "Local instalation cond't start"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentStatus"

  "/remote_install":
    post:
      summary: "Download and install package from remote url"
      description: |-
        Request the agent for installation of a remote package.
      requestBody:
        required: true
        description: "Remote url that offers the update pacakge"
        content:
          text/plain:
            schema:
              type: string
              example: "https://some_remote_url.domain/update.uhupkg"
      responses:
        "200":
          description: "Request accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentStatus"
        "422":
          description: "Remote instalation cond't start"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentStatus"

  "/update/download/abort":
    post:
      summary: "Abort download"
      description: |-
        Abort an update objects download (triggered by any command). On success, returns
        HTTP 200 and a empty json object as body. On failure, returns HTTP 400 and the
        error message inside a json object as body.
      responses:
        "200":
          description: "Download Aborted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbortDownloadAccepted"
        "400":
          description: "No download to be aborted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbortDownloadRejected"

  "/log":
    get:
      summary: "Fetch agent log"
      description: |-
        Returns the agent log.
      responses:
        "200":
          description: "Log of last execution"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogEntry"

components:
  schemas:
    AgentInfo:
      description: "Information about the agent"
      required:
        - state
        - version
        - config
        - firmware
        - runtime_settings
      properties:
        state:
          $ref: "#/components/schemas/AgentState"
        version:
          type: string
          example: "0.1.0-87-ga836b13"
        config:
          $ref: "#/components/schemas/AgentInfoSettings"
        firmware:
          $ref: "#/components/schemas/AgentInfoFirmware"
        runtime_settings:
          $ref: "#/components/schemas/AgentInfoRuntimeSettings"

    ProbeInfo:
      description: "Response about requested probe"
      type: object
      required:
        - update_available
      properties:
        update_available:
          type: boolean
        try_again_in:
          type: integer
          example: 3600

    ProbeCustomServer:
      description: "Server address which the update procedure will use for this request"
      type: object
      properties:
        custom_server:
          type: string
          example: "http://different-address:8080"

    AgentStatus:
      description: "Agent state information"
      type: object
      required:
        - busy
        - current_state
      properties:
        busy:
          type: boolean
          example: false
        current_state:
          $ref: "#/components/schemas/AgentState"

    AbortDownloadAccepted:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "request accepted, download aborted"

    AbortDownloadRejected:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          example: "there is no download to be aborted"

    AgentInfoSettings:
      type: object
      required:
        - polling
        - storage
        - update
        - network
        - firmware
      properties:
        polling:
          $ref: "#/components/schemas/AgentInfoSettingsPolling"
        storage:
          $ref: "#/components/schemas/AgentInfoSettingsStorage"
        update:
          $ref: "#/components/schemas/AgentInfoSettingsUpdate"
        network:
          $ref: "#/components/schemas/AgentInfoSettingsNetwork"
        firmware:
          $ref: "#/components/schemas/AgentInfoSettingsFirmware"

    AgentInfoSettingsFirmware:
      type: object
      required:
        - metadata
      properties:
        metadata:
          type: string
          example: "/usr/share/updatehub"

    AgentInfoSettingsNetwork:
      type: object
      required:
        - server_address
        - listen_socket
      properties:
        server_address:
          type: string
          example: "api.updatehub.io"
        listen_socket:
          type: string
          example: "localhost:8080"

    AgentInfoSettingsUpdate:
      type: object
      required:
        - download_dir
        - supported_install_modes
      properties:
        download_dir:
          type: string
          example: "/tmp/download"
        supported_install_modes:
          type: array
          items:
            $ref: "#/components/schemas/SupportedInstallMode"

    AgentInfoSettingsStorage:
      type: object
      required:
        - read_only
        - runtime_settings
      properties:
        read_only:
          type: boolean
        runtime_settings:
          type: string
          example: "/data/updatehub/state.data"

    AgentInfoSettingsPolling:
      type: object
      required:
        - enabled
        - interval
      properties:
        enabled:
          type: boolean
        interval:
          $ref: "#/components/schemas/Duration"

    AgentInfoFirmware:
      type: object
      required:
        - product_uid
        - device_identity
        - device_attributes
        - hardware
        - version
      properties:
        product_uid:
          type: string
          example: "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
        device_identity:
          type: object
          additionalProperties:
            type: string
          example:
            "id1": "value1"
            "id2": "value2"
        device_attributes:
          type: object
          additionalProperties:
            type: string
          example:
            "attr1": "value1"
            "attr2": "value2"
        hardware:
          type: string
          example: "board-name-revA"
        version:
          type: string
          example: "1.2"
        pub_key:
          type: string
          example: "/usr/share/updatehub/key.pub"

    AgentInfoRuntimeSettings:
      type: object
      required:
        - polling
        - update
        - path
        - persistent
      properties:
        polling:
          $ref: "#/components/schemas/AgentInfoRuntimeSettingsPolling"
        update:
          $ref: "#/components/schemas/AgentInfoRuntimeSettingsUpdate"
        path:
          type: string
          example: "/data/updatehub/state.data"
        persistent:
          type: boolean
          example: true

    AgentInfoRuntimeSettingsPolling:
      type: object
      required:
        - last
        - retries
        - now
        - server_address
      properties:
        last:
          type: string
          example: "2017-01-01T00:00:00Z"
        retries:
          type: integer
        now:
          type: boolean
        server_address:
          $ref: "#/components/schemas/RuntimePollingServer"

    AgentInfoRuntimeSettingsUpdate:
      type: object
      properties:
        upgrade_to_installation:
          $ref: "#/components/schemas/InstallationSet"
        applied_package_uid:
          type: string
          example: "587f984393f04c63d8e0948ffcf3860500b1981b8496e5eb2a0d0f9a7ea356a5"

    LogEntry:
      type: object
      required:
        - level
        - message
        - time
        - data
      properties:
        level:
          $ref: "#/components/schemas/LogLevel"
        message:
          type: string
          example: "info 1"
        time:
          type: string
          example: "2017-06-29 14:59:41.831111065 -0300 -03"
        data:
          type: object
          additionalProperties:
            type: string
          example:
            field1: "value1"
            field2: "value2"

    LogLevel:
      type: string
      enum: ["error", "info", "warning", "debug", "trace"]

    SupportedInstallMode:
      description: "Available install modes"
      type: string
      enum: ["copy", "raw"]

    AgentState:
      description: "Agent state"
      type: string
      enum: ["idle", "install", "park", "poll", "probe", "reboot"]

    InstallationSet:
      description: "The partitions used for boot or installation"
      type: string
      enum: ["a", "b"]

    RuntimePollingServer:
      description: |-
        The server being used for the current running probe operation, if default then the probe
        is being made to the server specified by the agent settings. This can be non default when
        the user requests probe to a different server.
      oneOf:
        - type: string
          enum: ["default"]
        - type: object
          required:
            - custom
          properties:
            custom:
              type: string
      example:
        custom: "http://localhost:8080"

    Duration:
      type: string
      description: |-
        A integer followed by a letter to indicate the time unit
      example: "3600s"
